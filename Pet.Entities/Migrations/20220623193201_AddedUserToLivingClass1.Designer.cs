// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Entities.Context;

#nullable disable

namespace Pet.Entities.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220623193201_AddedUserToLivingClass1")]
    partial class AddedUserToLivingClass1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoritesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FavoriteUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FullAdsress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdvertNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdvertType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PetState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LivingId");

                    b.HasIndex("UserId");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CityNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GenusType")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9316),
                            GenusName = "Amerikan Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9329)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9330),
                            GenusName = "American Curl",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9331)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9332),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9332)
                        },
                        new
                        {
                            Id = 4,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9333),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9334)
                        },
                        new
                        {
                            Id = 5,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9335),
                            GenusName = "Chartreux",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9335)
                        },
                        new
                        {
                            Id = 6,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9336),
                            GenusName = "Ragdoll Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9336)
                        },
                        new
                        {
                            Id = 7,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9337),
                            GenusName = "Mavi Rus kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9337)
                        },
                        new
                        {
                            Id = 8,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9338),
                            GenusName = "Maine Coon",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9339)
                        },
                        new
                        {
                            Id = 9,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9339),
                            GenusName = "İran kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9340)
                        },
                        new
                        {
                            Id = 10,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9341),
                            GenusName = "British Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9341)
                        },
                        new
                        {
                            Id = 11,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9342),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9342)
                        },
                        new
                        {
                            Id = 12,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9343),
                            GenusName = "Munchkin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9344)
                        },
                        new
                        {
                            Id = 13,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9344),
                            GenusName = "Scottish Fold",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9345)
                        },
                        new
                        {
                            Id = 14,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9346),
                            GenusName = "Norveç Orman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9346)
                        },
                        new
                        {
                            Id = 15,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9347),
                            GenusName = "Sibirya Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9347)
                        },
                        new
                        {
                            Id = 16,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9348),
                            GenusName = "Savannah",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9348)
                        },
                        new
                        {
                            Id = 17,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9349),
                            GenusName = "Amerikan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9350)
                        },
                        new
                        {
                            Id = 18,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9350),
                            GenusName = "Exotic Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9351)
                        },
                        new
                        {
                            Id = 19,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9352),
                            GenusName = "Ankara kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9352)
                        },
                        new
                        {
                            Id = 20,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9353),
                            GenusName = "Himalayan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9353)
                        },
                        new
                        {
                            Id = 21,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9355),
                            GenusName = "Kısa Tüylü Kedi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9356)
                        },
                        new
                        {
                            Id = 22,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9357),
                            GenusName = "Birman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9357)
                        },
                        new
                        {
                            Id = 23,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9358),
                            GenusName = "Habeş Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9358)
                        },
                        new
                        {
                            Id = 24,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9359),
                            GenusName = "Bombay Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9359)
                        },
                        new
                        {
                            Id = 25,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9360),
                            GenusName = "Kinkalow",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9361)
                        },
                        new
                        {
                            Id = 26,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9362),
                            GenusName = "Oriental Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9362)
                        },
                        new
                        {
                            Id = 27,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9364),
                            GenusName = "Ragamuffin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9364)
                        },
                        new
                        {
                            Id = 28,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9365),
                            GenusName = "Somali Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9365)
                        },
                        new
                        {
                            Id = 29,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9366),
                            GenusName = "Singapura",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9367)
                        },
                        new
                        {
                            Id = 30,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9367),
                            GenusName = "British Longhair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9368)
                        },
                        new
                        {
                            Id = 31,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9368),
                            GenusName = "Toyger",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9369)
                        },
                        new
                        {
                            Id = 32,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9370),
                            GenusName = "Van Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9370)
                        },
                        new
                        {
                            Id = 33,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9371),
                            GenusName = "manks kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9371)
                        },
                        new
                        {
                            Id = 34,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9372),
                            GenusName = "Donskoy Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9373)
                        },
                        new
                        {
                            Id = 35,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9373),
                            GenusName = "Havana kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9374)
                        },
                        new
                        {
                            Id = 36,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9374),
                            GenusName = "Ocicat",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9375)
                        },
                        new
                        {
                            Id = 37,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9376),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9376)
                        },
                        new
                        {
                            Id = 38,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9377),
                            GenusName = "Laperm",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9377)
                        },
                        new
                        {
                            Id = 39,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9378),
                            GenusName = "Selkirk Rex",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9379)
                        },
                        new
                        {
                            Id = 40,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9380),
                            GenusName = "Buldog",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9380)
                        },
                        new
                        {
                            Id = 41,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9383),
                            GenusName = "Labrador retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9383)
                        },
                        new
                        {
                            Id = 42,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9384),
                            GenusName = "Alman çoban köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9384)
                        },
                        new
                        {
                            Id = 43,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9385),
                            GenusName = "Kaniş",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9386)
                        },
                        new
                        {
                            Id = 44,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9386),
                            GenusName = "Golden Retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9387)
                        },
                        new
                        {
                            Id = 45,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9388),
                            GenusName = "Chihuahua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9388)
                        },
                        new
                        {
                            Id = 46,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9389),
                            GenusName = "Fransız buldoğu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9389)
                        },
                        new
                        {
                            Id = 47,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9390),
                            GenusName = "Bişon çuha köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9391)
                        },
                        new
                        {
                            Id = 48,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9391),
                            GenusName = "Boksör",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9392)
                        },
                        new
                        {
                            Id = 49,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9392),
                            GenusName = "Border collie",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9393)
                        },
                        new
                        {
                            Id = 50,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9394),
                            GenusName = "Sibirya kurdu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9394)
                        },
                        new
                        {
                            Id = 51,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9395),
                            GenusName = "Pug",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9395)
                        },
                        new
                        {
                            Id = 52,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9396),
                            GenusName = "Amerikan Staffordshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9396)
                        },
                        new
                        {
                            Id = 53,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9397),
                            GenusName = "Boston Terrier",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9398)
                        },
                        new
                        {
                            Id = 54,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9398),
                            GenusName = "Cavalier King Charles Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9399)
                        },
                        new
                        {
                            Id = 55,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9400),
                            GenusName = "Pomeranian",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9400)
                        },
                        new
                        {
                            Id = 56,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9401),
                            GenusName = "Yorkshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9401)
                        },
                        new
                        {
                            Id = 57,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9402),
                            GenusName = "Bull teriyer",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9402)
                        },
                        new
                        {
                            Id = 58,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9403),
                            GenusName = "İngiliz Cocker Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9404)
                        },
                        new
                        {
                            Id = 59,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9404),
                            GenusName = "Amerikan Eskimo Köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9405)
                        },
                        new
                        {
                            Id = 60,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9406),
                            GenusName = "Danua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9406)
                        },
                        new
                        {
                            Id = 61,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9407),
                            GenusName = "Malta köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9407)
                        },
                        new
                        {
                            Id = 62,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9408),
                            GenusName = "Çov-çov",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9409)
                        },
                        new
                        {
                            Id = 63,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9409),
                            GenusName = "Affenpinscher",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9410)
                        },
                        new
                        {
                            Id = 64,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9410),
                            GenusName = "Basenji",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9411)
                        },
                        new
                        {
                            Id = 65,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9412),
                            GenusName = "Dakhund",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9412)
                        },
                        new
                        {
                            Id = 66,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9413),
                            GenusName = "Bretonya epanyölü",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9413)
                        },
                        new
                        {
                            Id = 67,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9414),
                            GenusName = "Bulmastif",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9415)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("LivingId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Familya")
                        .HasColumnType("int");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kinds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9752),
                            Familya = 0,
                            KindName = "Kedi",
                            Team = 0,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9753)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9755),
                            Familya = 1,
                            KindName = "Köpek",
                            Team = 2,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 32, 1, 282, DateTimeKind.Local).AddTicks(9755)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenusId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<byte>("LivingAge")
                        .HasColumnType("tinyint");

                    b.Property<bool>("LivingGender")
                        .HasColumnType("bit");

                    b.Property<string>("LivingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.HasIndex("KindId");

                    b.HasIndex("UserId");

                    b.ToTable("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("UserRole");

                    b.HasData(
                        new
                        {
                            Id = "5a97f3aa-e557-4322-a941-0b5ff0492a0e",
                            ConcurrencyStamp = "78d1dca0-cadf-4312-80f7-6e68c2b7018f",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "9e06fd5d-eb3e-442b-a59f-e670e5356033",
                            ConcurrencyStamp = "9b42b233-5927-461c-b9e2-3ca267e3c19a",
                            Name = "BasicUser"
                        },
                        new
                        {
                            Id = "f665815d-bef6-46f1-9a4f-3e45ecfee0c8",
                            ConcurrencyStamp = "2614a24a-046d-4e7b-9319-ea8481008bfa",
                            Name = "MidUser"
                        },
                        new
                        {
                            Id = "01043ff7-54ae-44bb-afb2-3306338c7e92",
                            ConcurrencyStamp = "46e26783-8389-4527-bce3-d4658081d9d0",
                            Name = "HighUser"
                        },
                        new
                        {
                            Id = "8eb48cd1-9615-4b66-9939-2ff5f6cc8e1b",
                            ConcurrencyStamp = "f0011cfa-dd19-4aa0-ab46-ba8e7837696b",
                            Name = "Creator"
                        },
                        new
                        {
                            Id = "3aee526b-4b65-4467-876a-78259f968211",
                            ConcurrencyStamp = "5cdc2a90-8845-42d4-bebf-f96b15880635",
                            Name = "Editor"
                        });
                });

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Favorite", null)
                        .WithMany()
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany()
                        .HasForeignKey("LivingId");

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Advert")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Living");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Favorites")
                        .HasForeignKey("AdvertId");

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Image")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany("Images")
                        .HasForeignKey("LivingId");

                    b.Navigation("Advert");

                    b.Navigation("Living");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Genus", "Genus")
                        .WithMany()
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Kind", "Kind")
                        .WithMany("Livings")
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Livings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genus");

                    b.Navigation("Kind");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Addresss")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresss");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Navigation("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Navigation("Advert");

                    b.Navigation("Livings");
                });
#pragma warning restore 612, 618
        }
    }
}
