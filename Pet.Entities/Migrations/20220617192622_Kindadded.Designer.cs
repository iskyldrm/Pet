// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Entities.Context;

#nullable disable

namespace Pet.Entities.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220617192622_Kindadded")]
    partial class Kindadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoritesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FavoriteUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FullAdsress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdvertNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdvertType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PetState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LivingId");

                    b.HasIndex("UserId");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CityNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GenusType")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1202),
                            GenusName = "Amerikan Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1214)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1215),
                            GenusName = "American Curl",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1216)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1217),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1217)
                        },
                        new
                        {
                            Id = 4,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1219),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1219)
                        },
                        new
                        {
                            Id = 5,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1220),
                            GenusName = "Chartreux",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1220)
                        },
                        new
                        {
                            Id = 6,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1221),
                            GenusName = "Ragdoll Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1221)
                        },
                        new
                        {
                            Id = 7,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1222),
                            GenusName = "Mavi Rus kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1223)
                        },
                        new
                        {
                            Id = 8,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1223),
                            GenusName = "Maine Coon",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1224)
                        },
                        new
                        {
                            Id = 9,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1225),
                            GenusName = "İran kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1225)
                        },
                        new
                        {
                            Id = 10,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1226),
                            GenusName = "British Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1226)
                        },
                        new
                        {
                            Id = 11,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1227),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1227)
                        },
                        new
                        {
                            Id = 12,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1232),
                            GenusName = "Munchkin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1233)
                        },
                        new
                        {
                            Id = 13,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1233),
                            GenusName = "Scottish Fold",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1234)
                        },
                        new
                        {
                            Id = 14,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1234),
                            GenusName = "Norveç Orman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1235)
                        },
                        new
                        {
                            Id = 15,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1236),
                            GenusName = "Sibirya Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1236)
                        },
                        new
                        {
                            Id = 16,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1237),
                            GenusName = "Savannah",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1237)
                        },
                        new
                        {
                            Id = 17,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1238),
                            GenusName = "Amerikan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1239)
                        },
                        new
                        {
                            Id = 18,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1239),
                            GenusName = "Exotic Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1240)
                        },
                        new
                        {
                            Id = 19,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1241),
                            GenusName = "Ankara kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1241)
                        },
                        new
                        {
                            Id = 20,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1242),
                            GenusName = "Himalayan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1242)
                        },
                        new
                        {
                            Id = 21,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1243),
                            GenusName = "Kısa Tüylü Kedi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1243)
                        },
                        new
                        {
                            Id = 22,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1244),
                            GenusName = "Birman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1245)
                        },
                        new
                        {
                            Id = 23,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1245),
                            GenusName = "Habeş Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1246)
                        },
                        new
                        {
                            Id = 24,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1247),
                            GenusName = "Bombay Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1247)
                        },
                        new
                        {
                            Id = 25,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1248),
                            GenusName = "Kinkalow",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1248)
                        },
                        new
                        {
                            Id = 26,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1249),
                            GenusName = "Oriental Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1249)
                        },
                        new
                        {
                            Id = 27,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1250),
                            GenusName = "Ragamuffin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1251)
                        },
                        new
                        {
                            Id = 28,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1252),
                            GenusName = "Somali Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1253)
                        },
                        new
                        {
                            Id = 29,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1253),
                            GenusName = "Singapura",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1254)
                        },
                        new
                        {
                            Id = 30,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1255),
                            GenusName = "British Longhair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1255)
                        },
                        new
                        {
                            Id = 31,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1256),
                            GenusName = "Toyger",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1256)
                        },
                        new
                        {
                            Id = 32,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1257),
                            GenusName = "Van Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1258)
                        },
                        new
                        {
                            Id = 33,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1258),
                            GenusName = "manks kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1259)
                        },
                        new
                        {
                            Id = 34,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1259),
                            GenusName = "Donskoy Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1260)
                        },
                        new
                        {
                            Id = 35,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1261),
                            GenusName = "Havana kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1261)
                        },
                        new
                        {
                            Id = 36,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1262),
                            GenusName = "Ocicat",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1262)
                        },
                        new
                        {
                            Id = 37,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1263),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1264)
                        },
                        new
                        {
                            Id = 38,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1304),
                            GenusName = "Laperm",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1304)
                        },
                        new
                        {
                            Id = 39,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1305),
                            GenusName = "Selkirk Rex",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1306)
                        },
                        new
                        {
                            Id = 40,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1307),
                            GenusName = "Buldog",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1307)
                        },
                        new
                        {
                            Id = 41,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1308),
                            GenusName = "Labrador retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1308)
                        },
                        new
                        {
                            Id = 42,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1309),
                            GenusName = "Alman çoban köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1309)
                        },
                        new
                        {
                            Id = 43,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1310),
                            GenusName = "Kaniş",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1311)
                        },
                        new
                        {
                            Id = 44,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1311),
                            GenusName = "Golden Retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1312)
                        },
                        new
                        {
                            Id = 45,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1313),
                            GenusName = "Chihuahua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1313)
                        },
                        new
                        {
                            Id = 46,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1314),
                            GenusName = "Fransız buldoğu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1314)
                        },
                        new
                        {
                            Id = 47,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1315),
                            GenusName = "Bişon çuha köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1315)
                        },
                        new
                        {
                            Id = 48,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1316),
                            GenusName = "Boksör",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1317)
                        },
                        new
                        {
                            Id = 49,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1317),
                            GenusName = "Border collie",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1318)
                        },
                        new
                        {
                            Id = 50,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1319),
                            GenusName = "Sibirya kurdu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1319)
                        },
                        new
                        {
                            Id = 51,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1320),
                            GenusName = "Pug",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1320)
                        },
                        new
                        {
                            Id = 52,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1321),
                            GenusName = "Amerikan Staffordshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1322)
                        },
                        new
                        {
                            Id = 53,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1322),
                            GenusName = "Boston Terrier",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1323)
                        },
                        new
                        {
                            Id = 54,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1324),
                            GenusName = "Cavalier King Charles Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1324)
                        },
                        new
                        {
                            Id = 55,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1325),
                            GenusName = "Pomeranian",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1325)
                        },
                        new
                        {
                            Id = 56,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1326),
                            GenusName = "Yorkshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1327)
                        },
                        new
                        {
                            Id = 57,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1327),
                            GenusName = "Bull teriyer",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1328)
                        },
                        new
                        {
                            Id = 58,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1329),
                            GenusName = "İngiliz Cocker Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1329)
                        },
                        new
                        {
                            Id = 59,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1330),
                            GenusName = "Amerikan Eskimo Köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1330)
                        },
                        new
                        {
                            Id = 60,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1331),
                            GenusName = "Danua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1331)
                        },
                        new
                        {
                            Id = 61,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1332),
                            GenusName = "Malta köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1333)
                        },
                        new
                        {
                            Id = 62,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1333),
                            GenusName = "Çov-çov",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1334)
                        },
                        new
                        {
                            Id = 63,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1335),
                            GenusName = "Affenpinscher",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1335)
                        },
                        new
                        {
                            Id = 64,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1336),
                            GenusName = "Basenji",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1336)
                        },
                        new
                        {
                            Id = 65,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1337),
                            GenusName = "Dakhund",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1337)
                        },
                        new
                        {
                            Id = 66,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1338),
                            GenusName = "Bretonya epanyölü",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1339)
                        },
                        new
                        {
                            Id = 67,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1339),
                            GenusName = "Bulmastif",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1340)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("LivingId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Familya")
                        .HasColumnType("int");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kinds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1666),
                            Familya = 0,
                            Team = 0,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1666)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1668),
                            Familya = 1,
                            Team = 2,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1669)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1670),
                            Familya = 1,
                            Team = 0,
                            UpdateTime = new DateTime(2022, 6, 17, 22, 26, 22, 128, DateTimeKind.Local).AddTicks(1670)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenusId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<byte>("LivingAge")
                        .HasColumnType("tinyint");

                    b.Property<bool>("LivingGender")
                        .HasColumnType("bit");

                    b.Property<string>("LivingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.HasIndex("KindId");

                    b.HasIndex("UserId");

                    b.ToTable("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("UserRole");

                    b.HasData(
                        new
                        {
                            Id = "e7965cd5-c2da-4297-a417-1851c262184b",
                            ConcurrencyStamp = "7d2fc316-7a42-4f48-acd7-538962f22e62",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "a9fc3e73-76c8-4f7d-b113-7a852719f669",
                            ConcurrencyStamp = "7d7c2d24-2e09-4499-ad4e-880b3cb99f7c",
                            Name = "BasicUser"
                        },
                        new
                        {
                            Id = "03f597c7-b511-4266-a10f-591bc27e4875",
                            ConcurrencyStamp = "b473d760-70ff-46c0-aa18-b3f0ebf9ecb3",
                            Name = "MidUser"
                        },
                        new
                        {
                            Id = "e5c740be-527f-4cd1-ae16-7944dffd0a43",
                            ConcurrencyStamp = "2786024b-f122-4829-bfca-50648e4a7a88",
                            Name = "HighUser"
                        },
                        new
                        {
                            Id = "ae6f0671-3321-41d3-8297-56b980eb1e3a",
                            ConcurrencyStamp = "20a42d19-2bed-4983-841c-49f8c8be8134",
                            Name = "Creator"
                        },
                        new
                        {
                            Id = "81509776-31bb-49c9-ab2b-27b855bc8f0d",
                            ConcurrencyStamp = "7c16aa57-4829-4ada-9e69-64823c01a9aa",
                            Name = "Editor"
                        });
                });

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Favorite", null)
                        .WithMany()
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany()
                        .HasForeignKey("LivingId");

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Advert")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Living");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Favorites")
                        .HasForeignKey("AdvertId");

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Image")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany("Images")
                        .HasForeignKey("LivingId");

                    b.Navigation("Advert");

                    b.Navigation("Living");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Genus", "Genus")
                        .WithMany()
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Kind", "Kind")
                        .WithMany("Livings")
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany("Livings")
                        .HasForeignKey("UserId");

                    b.Navigation("Genus");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Addresss")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresss");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Navigation("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Navigation("Advert");

                    b.Navigation("Livings");
                });
#pragma warning restore 612, 618
        }
    }
}
