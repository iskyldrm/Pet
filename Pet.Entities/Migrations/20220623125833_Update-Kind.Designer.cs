// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Entities.Context;

#nullable disable

namespace Pet.Entities.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220623125833_Update-Kind")]
    partial class UpdateKind
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoritesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FavoriteUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FullAdsress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdvertNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdvertType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PetState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LivingId");

                    b.HasIndex("UserId");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CityNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GenusType")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4879),
                            GenusName = "Amerikan Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4897)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4900),
                            GenusName = "American Curl",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4901)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4902),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4903)
                        },
                        new
                        {
                            Id = 4,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4904),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4904)
                        },
                        new
                        {
                            Id = 5,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4905),
                            GenusName = "Chartreux",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4905)
                        },
                        new
                        {
                            Id = 6,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4906),
                            GenusName = "Ragdoll Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4906)
                        },
                        new
                        {
                            Id = 7,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4907),
                            GenusName = "Mavi Rus kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4908)
                        },
                        new
                        {
                            Id = 8,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4908),
                            GenusName = "Maine Coon",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4909)
                        },
                        new
                        {
                            Id = 9,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4910),
                            GenusName = "İran kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4910)
                        },
                        new
                        {
                            Id = 10,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4911),
                            GenusName = "British Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4911)
                        },
                        new
                        {
                            Id = 11,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4912),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4912)
                        },
                        new
                        {
                            Id = 12,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4913),
                            GenusName = "Munchkin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4914)
                        },
                        new
                        {
                            Id = 13,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4914),
                            GenusName = "Scottish Fold",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4915)
                        },
                        new
                        {
                            Id = 14,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4916),
                            GenusName = "Norveç Orman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4916)
                        },
                        new
                        {
                            Id = 15,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4917),
                            GenusName = "Sibirya Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4917)
                        },
                        new
                        {
                            Id = 16,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4918),
                            GenusName = "Savannah",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4919)
                        },
                        new
                        {
                            Id = 17,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4919),
                            GenusName = "Amerikan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4920)
                        },
                        new
                        {
                            Id = 18,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4921),
                            GenusName = "Exotic Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4921)
                        },
                        new
                        {
                            Id = 19,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4922),
                            GenusName = "Ankara kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4922)
                        },
                        new
                        {
                            Id = 20,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4923),
                            GenusName = "Himalayan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4924)
                        },
                        new
                        {
                            Id = 21,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4924),
                            GenusName = "Kısa Tüylü Kedi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4925)
                        },
                        new
                        {
                            Id = 22,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4926),
                            GenusName = "Birman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4926)
                        },
                        new
                        {
                            Id = 23,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4927),
                            GenusName = "Habeş Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4927)
                        },
                        new
                        {
                            Id = 24,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4928),
                            GenusName = "Bombay Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4928)
                        },
                        new
                        {
                            Id = 25,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4929),
                            GenusName = "Kinkalow",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4930)
                        },
                        new
                        {
                            Id = 26,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4930),
                            GenusName = "Oriental Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4931)
                        },
                        new
                        {
                            Id = 27,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4932),
                            GenusName = "Ragamuffin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4932)
                        },
                        new
                        {
                            Id = 28,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4933),
                            GenusName = "Somali Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4933)
                        },
                        new
                        {
                            Id = 29,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4934),
                            GenusName = "Singapura",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4935)
                        },
                        new
                        {
                            Id = 30,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4935),
                            GenusName = "British Longhair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4936)
                        },
                        new
                        {
                            Id = 31,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4937),
                            GenusName = "Toyger",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4937)
                        },
                        new
                        {
                            Id = 32,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4938),
                            GenusName = "Van Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4938)
                        },
                        new
                        {
                            Id = 33,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4939),
                            GenusName = "manks kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4940)
                        },
                        new
                        {
                            Id = 34,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4940),
                            GenusName = "Donskoy Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4941)
                        },
                        new
                        {
                            Id = 35,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4942),
                            GenusName = "Havana kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4942)
                        },
                        new
                        {
                            Id = 36,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4943),
                            GenusName = "Ocicat",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4943)
                        },
                        new
                        {
                            Id = 37,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4944),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4945)
                        },
                        new
                        {
                            Id = 38,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4945),
                            GenusName = "Laperm",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4946)
                        },
                        new
                        {
                            Id = 39,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4947),
                            GenusName = "Selkirk Rex",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4947)
                        },
                        new
                        {
                            Id = 40,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4948),
                            GenusName = "Buldog",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4948)
                        },
                        new
                        {
                            Id = 41,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4949),
                            GenusName = "Labrador retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4949)
                        },
                        new
                        {
                            Id = 42,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4950),
                            GenusName = "Alman çoban köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4951)
                        },
                        new
                        {
                            Id = 43,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4951),
                            GenusName = "Kaniş",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4952)
                        },
                        new
                        {
                            Id = 44,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4953),
                            GenusName = "Golden Retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4953)
                        },
                        new
                        {
                            Id = 45,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4954),
                            GenusName = "Chihuahua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4954)
                        },
                        new
                        {
                            Id = 46,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4955),
                            GenusName = "Fransız buldoğu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4956)
                        },
                        new
                        {
                            Id = 47,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4956),
                            GenusName = "Bişon çuha köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4957)
                        },
                        new
                        {
                            Id = 48,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4958),
                            GenusName = "Boksör",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4958)
                        },
                        new
                        {
                            Id = 49,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4959),
                            GenusName = "Border collie",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4959)
                        },
                        new
                        {
                            Id = 50,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4960),
                            GenusName = "Sibirya kurdu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4961)
                        },
                        new
                        {
                            Id = 51,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4962),
                            GenusName = "Pug",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4962)
                        },
                        new
                        {
                            Id = 52,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4963),
                            GenusName = "Amerikan Staffordshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4963)
                        },
                        new
                        {
                            Id = 53,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4964),
                            GenusName = "Boston Terrier",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4965)
                        },
                        new
                        {
                            Id = 54,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4965),
                            GenusName = "Cavalier King Charles Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4966)
                        },
                        new
                        {
                            Id = 55,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4967),
                            GenusName = "Pomeranian",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4967)
                        },
                        new
                        {
                            Id = 56,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4968),
                            GenusName = "Yorkshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4968)
                        },
                        new
                        {
                            Id = 57,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4969),
                            GenusName = "Bull teriyer",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4969)
                        },
                        new
                        {
                            Id = 58,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4970),
                            GenusName = "İngiliz Cocker Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4971)
                        },
                        new
                        {
                            Id = 59,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4972),
                            GenusName = "Amerikan Eskimo Köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4972)
                        },
                        new
                        {
                            Id = 60,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4973),
                            GenusName = "Danua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4973)
                        },
                        new
                        {
                            Id = 61,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4974),
                            GenusName = "Malta köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4974)
                        },
                        new
                        {
                            Id = 62,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4975),
                            GenusName = "Çov-çov",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4976)
                        },
                        new
                        {
                            Id = 63,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4976),
                            GenusName = "Affenpinscher",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4977)
                        },
                        new
                        {
                            Id = 64,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4978),
                            GenusName = "Basenji",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4978)
                        },
                        new
                        {
                            Id = 65,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4979),
                            GenusName = "Dakhund",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4979)
                        },
                        new
                        {
                            Id = 66,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4980),
                            GenusName = "Bretonya epanyölü",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4981)
                        },
                        new
                        {
                            Id = 67,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4981),
                            GenusName = "Bulmastif",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(4982)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("LivingId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Familya")
                        .HasColumnType("int");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kinds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(5411),
                            Familya = 0,
                            KindName = "Kedi",
                            Team = 0,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(5412)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(5413),
                            Familya = 1,
                            KindName = "Köpek",
                            Team = 2,
                            UpdateTime = new DateTime(2022, 6, 23, 15, 58, 33, 334, DateTimeKind.Local).AddTicks(5414)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenusId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<byte>("LivingAge")
                        .HasColumnType("tinyint");

                    b.Property<bool>("LivingGender")
                        .HasColumnType("bit");

                    b.Property<string>("LivingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.HasIndex("KindId");

                    b.HasIndex("UserId");

                    b.ToTable("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("UserRole");

                    b.HasData(
                        new
                        {
                            Id = "b643195e-1b2a-451e-a81e-4732d00abe24",
                            ConcurrencyStamp = "250763b4-a5b8-40d0-a999-f76922105e38",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "cbbc7890-9399-4073-a064-f91eba1dcf9d",
                            ConcurrencyStamp = "0313fa0b-7335-4648-89fe-68018e4fc244",
                            Name = "BasicUser"
                        },
                        new
                        {
                            Id = "569cc95a-a6d3-4ce9-addf-03f217cbb4b2",
                            ConcurrencyStamp = "6d846fdd-e500-4140-ad3c-8877186159de",
                            Name = "MidUser"
                        },
                        new
                        {
                            Id = "3421e807-d478-48bb-93a8-664239628c6f",
                            ConcurrencyStamp = "d117e3b5-d24b-4bfa-9c79-61237053f818",
                            Name = "HighUser"
                        },
                        new
                        {
                            Id = "8d69c9e5-77cd-452c-a873-16af1fb3a275",
                            ConcurrencyStamp = "cac3a7c8-9a27-4299-b88f-c634ab7320fc",
                            Name = "Creator"
                        },
                        new
                        {
                            Id = "c434af87-edf7-453b-a4f3-daa35deb6516",
                            ConcurrencyStamp = "749bcc4f-774f-4255-9eda-251ec5fa2d6a",
                            Name = "Editor"
                        });
                });

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Favorite", null)
                        .WithMany()
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany()
                        .HasForeignKey("LivingId");

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Advert")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Living");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Favorites")
                        .HasForeignKey("AdvertId");

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Image")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany("Images")
                        .HasForeignKey("LivingId");

                    b.Navigation("Advert");

                    b.Navigation("Living");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Genus", "Genus")
                        .WithMany()
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Kind", "Kind")
                        .WithMany("Livings")
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany("Livings")
                        .HasForeignKey("UserId");

                    b.Navigation("Genus");

                    b.Navigation("Kind");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Addresss")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresss");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Navigation("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Navigation("Advert");

                    b.Navigation("Livings");
                });
#pragma warning restore 612, 618
        }
    }
}
