// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Entities.Context;

#nullable disable

namespace Pet.Entities.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220623194401_AddedUserToLivingClass3")]
    partial class AddedUserToLivingClass3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoritesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FavoriteUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FullAdsress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdvertNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdvertType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PetState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LivingId");

                    b.HasIndex("UserId");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CityNumber")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Genus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GenusType")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(531),
                            GenusName = "Amerikan Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(540)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(542),
                            GenusName = "American Curl",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(542)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(543),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(544)
                        },
                        new
                        {
                            Id = 4,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(545),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(545)
                        },
                        new
                        {
                            Id = 5,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(546),
                            GenusName = "Chartreux",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(546)
                        },
                        new
                        {
                            Id = 6,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(547),
                            GenusName = "Ragdoll Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(548)
                        },
                        new
                        {
                            Id = 7,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(549),
                            GenusName = "Mavi Rus kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(549)
                        },
                        new
                        {
                            Id = 8,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(550),
                            GenusName = "Maine Coon",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(551)
                        },
                        new
                        {
                            Id = 9,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(551),
                            GenusName = "İran kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(552)
                        },
                        new
                        {
                            Id = 10,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(553),
                            GenusName = "British Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(553)
                        },
                        new
                        {
                            Id = 11,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(554),
                            GenusName = "California Spangled",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(554)
                        },
                        new
                        {
                            Id = 12,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(556),
                            GenusName = "Munchkin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(556)
                        },
                        new
                        {
                            Id = 13,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(557),
                            GenusName = "Scottish Fold",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(557)
                        },
                        new
                        {
                            Id = 14,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(558),
                            GenusName = "Norveç Orman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(559)
                        },
                        new
                        {
                            Id = 15,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(559),
                            GenusName = "Sibirya Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(560)
                        },
                        new
                        {
                            Id = 16,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(561),
                            GenusName = "Savannah",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(561)
                        },
                        new
                        {
                            Id = 17,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(562),
                            GenusName = "Amerikan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(562)
                        },
                        new
                        {
                            Id = 18,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(563),
                            GenusName = "Exotic Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(563)
                        },
                        new
                        {
                            Id = 19,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(564),
                            GenusName = "Ankara kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(565)
                        },
                        new
                        {
                            Id = 20,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(565),
                            GenusName = "Himalayan Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(566)
                        },
                        new
                        {
                            Id = 21,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(567),
                            GenusName = "Kısa Tüylü Kedi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(567)
                        },
                        new
                        {
                            Id = 22,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(568),
                            GenusName = "Birman Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(568)
                        },
                        new
                        {
                            Id = 23,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(569),
                            GenusName = "Habeş Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(569)
                        },
                        new
                        {
                            Id = 24,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(570),
                            GenusName = "Bombay Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(571)
                        },
                        new
                        {
                            Id = 25,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(571),
                            GenusName = "Kinkalow",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(572)
                        },
                        new
                        {
                            Id = 26,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(573),
                            GenusName = "Oriental Shorthair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(573)
                        },
                        new
                        {
                            Id = 27,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(574),
                            GenusName = "Ragamuffin",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(574)
                        },
                        new
                        {
                            Id = 28,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(576),
                            GenusName = "Somali Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(576)
                        },
                        new
                        {
                            Id = 29,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(577),
                            GenusName = "Singapura",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(578)
                        },
                        new
                        {
                            Id = 30,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(578),
                            GenusName = "British Longhair",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(579)
                        },
                        new
                        {
                            Id = 31,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(580),
                            GenusName = "Toyger",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(580)
                        },
                        new
                        {
                            Id = 32,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(581),
                            GenusName = "Van Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(581)
                        },
                        new
                        {
                            Id = 33,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(582),
                            GenusName = "manks kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(582)
                        },
                        new
                        {
                            Id = 34,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(583),
                            GenusName = "Donskoy Kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(584)
                        },
                        new
                        {
                            Id = 35,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(584),
                            GenusName = "Havana kedisi",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(585)
                        },
                        new
                        {
                            Id = 36,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(586),
                            GenusName = "Ocicat",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(586)
                        },
                        new
                        {
                            Id = 37,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(587),
                            GenusName = "Balinese",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(587)
                        },
                        new
                        {
                            Id = 38,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(588),
                            GenusName = "Laperm",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(588)
                        },
                        new
                        {
                            Id = 39,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(589),
                            GenusName = "Selkirk Rex",
                            GenusType = true,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(590)
                        },
                        new
                        {
                            Id = 40,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(590),
                            GenusName = "Buldog",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(591)
                        },
                        new
                        {
                            Id = 41,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(592),
                            GenusName = "Labrador retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(592)
                        },
                        new
                        {
                            Id = 42,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(593),
                            GenusName = "Alman çoban köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(593)
                        },
                        new
                        {
                            Id = 43,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(594),
                            GenusName = "Kaniş",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(595)
                        },
                        new
                        {
                            Id = 44,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(595),
                            GenusName = "Golden Retriever",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(596)
                        },
                        new
                        {
                            Id = 45,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(596),
                            GenusName = "Chihuahua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(597)
                        },
                        new
                        {
                            Id = 46,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(598),
                            GenusName = "Fransız buldoğu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(598)
                        },
                        new
                        {
                            Id = 47,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(599),
                            GenusName = "Bişon çuha köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(600)
                        },
                        new
                        {
                            Id = 48,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(600),
                            GenusName = "Boksör",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(601)
                        },
                        new
                        {
                            Id = 49,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(601),
                            GenusName = "Border collie",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(602)
                        },
                        new
                        {
                            Id = 50,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(603),
                            GenusName = "Sibirya kurdu",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(603)
                        },
                        new
                        {
                            Id = 51,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(604),
                            GenusName = "Pug",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(604)
                        },
                        new
                        {
                            Id = 52,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(605),
                            GenusName = "Amerikan Staffordshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(606)
                        },
                        new
                        {
                            Id = 53,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(606),
                            GenusName = "Boston Terrier",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(607)
                        },
                        new
                        {
                            Id = 54,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(608),
                            GenusName = "Cavalier King Charles Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(608)
                        },
                        new
                        {
                            Id = 55,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(609),
                            GenusName = "Pomeranian",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(609)
                        },
                        new
                        {
                            Id = 56,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(610),
                            GenusName = "Yorkshire teriyeri",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(610)
                        },
                        new
                        {
                            Id = 57,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(611),
                            GenusName = "Bull teriyer",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(612)
                        },
                        new
                        {
                            Id = 58,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(612),
                            GenusName = "İngiliz Cocker Spaniel",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(613)
                        },
                        new
                        {
                            Id = 59,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(614),
                            GenusName = "Amerikan Eskimo Köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(614)
                        },
                        new
                        {
                            Id = 60,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(615),
                            GenusName = "Danua",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(615)
                        },
                        new
                        {
                            Id = 61,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(616),
                            GenusName = "Malta köpeği",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(616)
                        },
                        new
                        {
                            Id = 62,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(617),
                            GenusName = "Çov-çov",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(618)
                        },
                        new
                        {
                            Id = 63,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(618),
                            GenusName = "Affenpinscher",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(619)
                        },
                        new
                        {
                            Id = 64,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(620),
                            GenusName = "Basenji",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(620)
                        },
                        new
                        {
                            Id = 65,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(621),
                            GenusName = "Dakhund",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(621)
                        },
                        new
                        {
                            Id = 66,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(622),
                            GenusName = "Bretonya epanyölü",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(623)
                        },
                        new
                        {
                            Id = 67,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(623),
                            GenusName = "Bulmastif",
                            GenusType = false,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(624)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LivingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("LivingId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Familya")
                        .HasColumnType("int");

                    b.Property<string>("KindName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kinds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(831),
                            Familya = 0,
                            KindName = "Kedi",
                            Team = 0,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(832)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(833),
                            Familya = 1,
                            KindName = "Köpek",
                            Team = 2,
                            UpdateTime = new DateTime(2022, 6, 23, 22, 44, 1, 660, DateTimeKind.Local).AddTicks(834)
                        });
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GenusId")
                        .HasColumnType("int");

                    b.Property<int>("KindId")
                        .HasColumnType("int");

                    b.Property<byte>("LivingAge")
                        .HasColumnType("tinyint");

                    b.Property<bool>("LivingGender")
                        .HasColumnType("bit");

                    b.Property<string>("LivingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GenusId");

                    b.HasIndex("KindId");

                    b.HasIndex("UserId");

                    b.ToTable("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Pet.Entities.Concrete.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("UserRole");

                    b.HasData(
                        new
                        {
                            Id = "554eeedf-a075-4595-8c33-14831b833260",
                            ConcurrencyStamp = "5e483bce-b7fb-4c2e-a55a-226a4547e241",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "3b34c3ec-966e-4ddd-87ce-8954a15755dc",
                            ConcurrencyStamp = "60d9e452-43fa-45b9-87d2-06d2844f0dd8",
                            Name = "BasicUser"
                        },
                        new
                        {
                            Id = "350dc762-1887-4707-a68f-761d2f03cdc6",
                            ConcurrencyStamp = "1e2df34c-d1f3-4e88-adaf-f085ec59e8e0",
                            Name = "MidUser"
                        },
                        new
                        {
                            Id = "8faf8699-f5e9-4282-882c-08d74366e533",
                            ConcurrencyStamp = "5b203b2c-d1d5-4c7d-ad21-02cb27010b34",
                            Name = "HighUser"
                        },
                        new
                        {
                            Id = "c946b0c8-98bc-4216-9358-32ba94a39b2b",
                            ConcurrencyStamp = "54c6735e-d41f-4f6a-956e-c837608e7f28",
                            Name = "Creator"
                        },
                        new
                        {
                            Id = "6a9ddfc3-3d78-4907-9a94-f8db940ef905",
                            ConcurrencyStamp = "1b38d1b8-3adc-4b32-b8bb-cb39a7e83669",
                            Name = "Editor"
                        });
                });

            modelBuilder.Entity("FavoriteUser", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Favorite", null)
                        .WithMany()
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Address", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany()
                        .HasForeignKey("LivingId");

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Advert")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Living");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.District", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Favorite", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Favorites")
                        .HasForeignKey("AdvertId");

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Image", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Advert", "Advert")
                        .WithMany("Image")
                        .HasForeignKey("AdvertId");

                    b.HasOne("Pet.Entities.Concrete.Living", "Living")
                        .WithMany("Images")
                        .HasForeignKey("LivingId");

                    b.Navigation("Advert");

                    b.Navigation("Living");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Genus", "Genus")
                        .WithMany()
                        .HasForeignKey("GenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.Kind", "Kind")
                        .WithMany("Livings")
                        .HasForeignKey("KindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Entities.Concrete.User", "User")
                        .WithMany("Livings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genus");

                    b.Navigation("Kind");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.HasOne("Pet.Entities.Concrete.Address", "Addresss")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Addresss");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Advert", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Kind", b =>
                {
                    b.Navigation("Livings");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.Living", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Pet.Entities.Concrete.User", b =>
                {
                    b.Navigation("Advert");

                    b.Navigation("Livings");
                });
#pragma warning restore 612, 618
        }
    }
}
